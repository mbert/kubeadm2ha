#
# Playbook to set up a Kubernetes cluster.
#
---
- name: Check preconditions on primary master
  hosts: primary_master
  remote_user: root
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Checking primary master...
      ansible.builtin.include_tasks: "{{ playbook_dir }}/roles/usual_suspects/tasks/primary_master.yaml"
  tags:
    - precon-primary-master
    - setup-system

- name: Prepare Nodes
  hosts: nodes
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  roles:
    - prepare_nodes
  tags:
    - prepare-nodes
    - setup-system

- name: Check preconditions on all nodes
  hosts: nodes
  remote_user: root
  gather_facts: false
  any_errors_fatal: true
  roles:
    - usual_suspects
  tags:
    - usual-suspects
    - setup-system

- name: Kube-VIP
  hosts: masters
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Read Kube-VIP image tags
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/vars/imageversions.yaml"
  roles:
    - {role: kube_vip, when: "LOAD_BALANCING == 'kube-vip'" }
  tags:
    - kube-vip
    - setup-infrastructure

- name: Keepalived
  hosts: masters
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Read Kube-VIP image tags
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/vars/imageversions.yaml"
  roles:
    - {role: keepalived, when: "LOAD_BALANCING != 'kube-vip'" }
  tags:
    - keepalived
    - setup-infrastructure

- name: NGINX
  hosts: masters
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Read Kube-VIP image tags
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/vars/imageversions.yaml"
  roles:
    - {role: nginx, when: "LOAD_BALANCING == 'nginx'" }
  tags:
    - nginx
    - setup-infrastructure

- name: HAProxy
  hosts: masters
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Read Kube-VIP image tags
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/vars/imageversions.yaml"
  roles:
    - {role: haproxy, when: "LOAD_BALANCING == 'haproxy'" }
  tags:
    - haproxy
    - setup-infrastructure

- name: Deploy external etcd
  hosts: etcd
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Read Kube-VIP image tags
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/vars/imageversions.yaml"
  roles:
    - {role: external_etcd, when: "ETCD_HOSTING == 'external'" }
  tags:
    - external-etcd
    - setup-k8s

- name: Gather facts for etcd hosts
  hosts: etcd
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  tags:
    - masters
    - primary-master
    - setup-k8s

- name: Kube-VIP workaround setup
  hosts: primary_master
  remote_user: root
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Setup temporary use of super-admin.yaml for kube-vip
      ansible.builtin.include_tasks: "{{ playbook_dir }}/roles/kube_vip/tasks/pre_bootstrap.yaml"
      when: LOAD_BALANCING == 'kube-vip'
  tags:
    - masters
    - primary-master
    - setup-k8s
    - kube-vip

- name: Set up primary master
  hosts: primary_master
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  roles:
    - primary_master
    - network_plugin
  tags:
    - masters
    - primary-master
    - setup-k8s

- name: Kube-VIP workaround cleanup
  hosts: primary_master
  remote_user: root
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Roll back temporary use of super-admin.yaml for kube-vip
      ansible.builtin.include_tasks: "{{ playbook_dir }}/roles/kube_vip/tasks/post_bootstrap.yaml"
      when: LOAD_BALANCING == 'kube-vip'
  tags:
    - masters
    - primary-master
    - setup-k8s

- name: Set up secondary masters
  hosts: secondary_masters
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  roles:
    - secondary_masters
  tags:
    - masters
    - secondary-masters
    - setup-k8s

- name: Make some adjustments for HA
  hosts: masters
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  roles:
    - ha_settings
  tags:
    - ha-settings
    - masters
    - setup-k8s

- name: Create join token
  hosts: primary_master
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  roles:
    - join_token
  tags:
    - join-token
    - minions
    - setup-k8s

- name: Join minions
  hosts: minions
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  roles:
    - minions
  tags:
    - join-minions
    - minions
    - setup-k8s

- name: Label minions
  hosts: nodes
  remote_user: root
  gather_facts: true
  any_errors_fatal: true
  roles:
    - {role: label_minions, when: "'primary_master' in group_names" }
  tags:
    - label-minions
    - minions
    - setup-k8s
