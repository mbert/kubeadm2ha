#
# Sets up an Elasticsearch for centralised logging
#
---
- name: Create directory for Elasticsearch installation
  ansible.builtin.file: "path=/root/setup/elasticsearch mode=0755 state=directory"

- name: Create the yamls for the required ES data persistent volumes
  ansible.builtin.template: "src=pv-es.yaml.j2 dest=/root/setup/elasticsearch/pv-es-{{ ES_INDEX }}.yaml mode=0644"
  with_sequence: count={{ groups['elasticsearch'] | length }}
  loop_control:
    loop_var: ES_INDEX

- name: Create the yamls for the ES statefulsets
  ansible.builtin.template: "src=es-data-statefulset.yaml.j2 dest=/root/setup/elasticsearch/es-data-statefulset-{{ ES_NODE_TYPE }}.yaml mode=0644"
  with_items:
  - hot
  - warm
  loop_control:
    loop_var: ES_NODE_TYPE

- name: Copy Elasticsearch yaml files
  ansible.builtin.copy: "src={{ item }} dest=/root/setup/elasticsearch/ mode=0644"
  with_items:
  - curator-configmap.yaml
  - curator-cronjob.yaml
  - es-client-deployment.yaml
  - es-client-service.yaml
  - es-data-service.yaml
  - es-discovery-service.yaml
  - es-master-deployment.yaml
  - es-serviceaccount.yaml

- name: Set up persistent volumes
  ansible.builtin.shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; for i in `seq 1 {{ groups['elasticsearch'] | length }}`; do kubectl create -f pv-es-$i.yaml; done" # noqa no-changed-when
  args:
    chdir: /root/setup/elasticsearch

- name: Set up Elasticsearch service account and discovery service
  ansible.builtin.shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl create -f es-serviceaccount.yaml -f es-discovery-service.yaml" # noqa no-changed-when
  args:
    chdir: /root/setup/elasticsearch

- name: Set up Elasticsearch master and wait for it to be fully initialised
  ansible.builtin.shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl create -f es-master-deployment.yaml && kubectl -n kube-system rollout status -f es-ma # noqa no-changed-whenster-deployment.yaml" # noqa no-changed-when
  args:
    chdir: /root/setup/elasticsearch

- name: Set up Elasticsearch client and wait for it to be fully initialised
  ansible.builtin.shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl create -f es-client-service.yaml -f es-client-deployment.yaml && kubectl -n kube-system rollout status -f es-client-deployment.yaml" # noqa no-changed-when
  args:
    chdir: /root/setup/elasticsearch

- name: Set up Elasticsearch data instances 
  ansible.builtin.shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl create -f es-data-service.yaml -f es-data-statefulset-hot.yaml -f es-data-statefulset-warm.yaml" # noqa no-changed-when
  args:
    chdir: /root/setup/elasticsearch

- name: Set up Curator job for moving indices from hot to warm Elasticsearch data instances
  ansible.builtin.shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl create -f curator-configmap.yaml -f curator-cronjob.yaml" # noqa no-changed-when
  args:
    chdir: /root/setup/elasticsearch

